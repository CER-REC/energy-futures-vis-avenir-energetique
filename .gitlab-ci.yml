before_script:
  # Install ssh-agent if not already installed, it is required by Docker.
  - 'which ssh-agent || ( apk add --no-cache openssh-client )'
  - 'which echo || ( apk add --no-cache echo )' 

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
  #- ssh-add < 'echo "$SSH_PRIVATE_KEY"'

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  # In order to properly check the server's host key, assuming you created the
  # SSH_SERVER_HOSTKEYS variable previously, uncomment the following two lines
  # instead.
  # - mkdir -p ~/.ssh
  # - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'
  
# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:8-alpine

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
  - node_modules/

#test:
#  stage: test
#  script:
#    - npm install
#    - npm test

#pack:
#  stage: deploy
#  script:
#    - npm install
#    - npm pack
#  artifacts:
#    paths:
#    - ./*.tgz

#deploy to development:
#  environment: development
#  script:
#  - apk add --no-cache openssh-client
#  - npm install
#  - scp -P 22 -r ./* ci_energy-futures@192.168.15.85:/opt/node/dev.codingtool/
  
deploy to production:
  environment: production
  script:
  - npm install
  - scp -P 22 -r ./* ci_energy-futures@192.168.15.85:/opt/node/energy-futures/
  only:
  - master
