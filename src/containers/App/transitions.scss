@import "../../styles/colors";

$defaultTransition: 1s ease-in-out;

$fastEnd: 1s cubic-bezier(0.8, 0, 1, 0.2);
$fastestEnd: 1s cubic-bezier(1, 0, 1, 0);

$fastStart: 1s cubic-bezier(0, 0.8, 0.2, 1);
$fastestStart: 1s cubic-bezier(0, 1, 0, 1);

$faded: 0.3;

/**
 *  Each state inherits the previous values, so we only have to declare the parts
 *  that change at each step.
 */
$states: (
  0: (
    ".guideTranslate": (
      opacity: 0,
      transition: "opacity 0s 1.2s , transform #{$defaultTransition}",
    ),
    ".guideTranslate .CircleContainer": (
      pointer-events: none,
    ),
    ".selectedKeywordTranslate": (opacity: 0),
    ".ConditionExplorer .guide": (
      opacity: 1,
      transition: opacity 0.3s 1s ease-in-out,
    ),
    ".ConditionExplorer .guideOutline": (
      opacity: 1,
      transition: opacity 0s 1s,
    ),
    ".ViewTwo": (pointer-events: none),
    ".ViewTwo .header": (opacity: 0),
    ".ViewTwo .wheel .MovingContainer": (opacity: 0),
    ".ViewTwo .wheel .pullToSpinContainer": (opacity: 0),
    ".ViewTwo .wheel .listContainer": (opacity: 0),
    ".ViewTwo .wheel .labelContainer": (opacity: 0),
    ".ViewTwo .wheel .GreyPipe": (opacity: 0),
    ".ViewTwo .wheel .DotLegend": (opacity: 0),

    ".ViewTwo .companyBreakdown": (opacity: 0),
    ".ViewTwo .menus": (opacity: 0),
    ".ViewTwo .legend": (opacity: 0),
    ".ViewTwo .wheel .Wheel .interactiveItems .PullToSpin": (pointer-events: none),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .list": (pointer-events: none),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .List-Item-Content": (pointer-events: none),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .List": (pointer-events: none),

    ".ConditionDetails > *": (pointer-events: none),
    ".ConditionDetails .ConditionList .List": (opacity: 0),
    ".ConditionDetails .listPane .List-Item": (opacity: 0),
    ".ConditionDetails .listPane .CircleContainer": (opacity: 0),
    ".ConditionDetails .ProjectHeader": (opacity: 0),
    ".ConditionDetails .contentPane": (opacity: 0),
    ".ViewThree": (
      pointer-events: none,
      visibility: hidden,
    ),
    // Fix for Firefox; the svg's pointer-events: all overrides visibility: hidden
    ".ViewThree .VictoryContainer > svg": (pointer-events: visible !important),
    ".Footer": (
      opacity: 0,

      transition: "opacity #{$fastStart}, height #{$defaultTransition}, visibility 0s 1s",
    ),
  ),
  // 8 resets from View 2 -> 1, just with different transitions
  9: (),
  // The Guide has been clicked to start the tutorial
  1: (
    ".guideTranslate": (
      opacity: 1,
      transition: opacity 0s,
    ),
    ".selectedKeywordTranslate": (
      opacity: 1,
    ),
    ".ConditionExplorer .guide": (
      opacity: 0,
      transition: opacity 0s,
    ),
    ".ConditionExplorer .guideOutline": (
      opacity: 0,
      transition: opacity 0s,
    ),
  ),
  2: (
    ".guideTranslate": (
      transform: translate(55%, 85%),
      opacity: 1,
      transition: "transform #{$defaultTransition}, opacity #{$fastStart}",
    ),
    ".guideTranslate .CircleContainer": (
      pointer-events: auto,
    ),
    ".selectedKeywordTranslate": (
      opacity: 0,
      transition: "transform #{$defaultTransition}, opacity #{$fastEnd}",
    ),
    ".appControls .BrowseByBtn.location": (
      opacity: 0,
      pointer-events: none,
    ),
    ".appControls .GuideTransport": (
      opacity: 1,
      visibility: visible,
      transition: "opacity #{$fastEnd}, left #{$defaultTransition}",
    ),
    ".ViewOne": (pointer-events: none),
    ".ViewOne .infoBar": (
      opacity: 0,
      visibility: hidden,
      transition: "opacity #{$defaultTransition}, visibility 0s 1s",
    ),
    ".ViewOne .introduction": (
      transform: "translateY(-100vh)",
      visibility: hidden,
      transition: "transform #{$defaultTransition}, visibility 0s 1s",
    ),
    ".ViewOne .explorer": (
      transform: "translateY(-100vh)",
      visibility: hidden,
      transition: "transform #{$defaultTransition}, visibility 0s 1s",
    ),
    ".ConditionDetails .contentPane": (opacity: 1),
    ".ConditionDetails .ConditionList .List": (opacity: 1),
    ".ConditionDetails .listPane .List-Item.selected": (opacity: 1),
  ),
  3: (
    ".guideTranslate": (
      transform: translate(72%, 22%),
      transition: "transform #{$defaultTransition}, opacity #{$defaultTransition}",
    ),
    ".ConditionDetails .contentPane": (opacity: $faded),
    ".ConditionDetails .ConditionList .List": (opacity: $faded),
    ".ConditionDetails .listPane .List-Item.selected": (opacity: $faded),
    ".ViewTwo .legend": (opacity: 1),
  ),
  4: (
    ".guideTranslate": (transform: translate(42%, 70%)),
    ".ViewTwo .legend": (opacity: $faded),
    ".ConditionDetails .ConditionList .List": (opacity: 1),
    ".ConditionDetails .listPane .List-Item": (opacity: 1),
    ".ConditionDetails .listPane .CircleContainer": (opacity: 1),
    ".ConditionDetails .listPane .List-Item.selected": (opacity: 1),
    ".ConditionDetails .ProjectHeader": (opacity: 1),
  ),
  5: (
    ".guideTranslate": (transform: translate(80%, 10%)),
    ".ConditionDetails .ConditionList .List": (opacity: $faded),
    ".ConditionDetails .listPane .List-Item": (opacity: $faded),
    ".ConditionDetails .listPane .CircleContainer": (opacity: $faded),
    ".ConditionDetails .listPane .List-Item.selected": (opacity: $faded),
    ".ConditionDetails .ProjectHeader": (opacity: $faded),
    ".ViewTwo .wheel .labelContainer": (opacity: 1),
    ".ViewTwo .wheel .GreyPipe": (opacity: 1),
    ".ViewTwo .companyBreakdown": (opacity: 1),
  ),
  6: (
    ".guideTranslate": (transform: translate(11%, 68%)),
    ".appControls .BrowseBy": (opacity: 0),
    ".appControls .BrowseByBtn.company": (
      opacity: 0,
      pointer-events: none,
    ),
    ".appControls .BrowseByBtn.location": (
      opacity: 0,
      pointer-events: none,
    ),
    ".ViewTwo .companyBreakdown": (opacity: $faded),
    ".ViewTwo .wheel .MovingContainer": (opacity: 1),
    ".ViewTwo .wheel .listContainer": (opacity: 1),
    ".ViewTwo .wheel .pullToSpinContainer": (opacity: 1),
    ".ViewTwo .wheel .DotLegend": (opacity: 1),
  ),
  7: (
    ".guideWrapper": (
      pointer-events: none,
    ),
    ".guideTranslate": (transform: translate(80%, 10%)),
    ".appControls": (transform: translateX(10px)),
    ".appControls .BrowseBy": (opacity: 1),
    ".appControls .BrowseByBtn.company": (
      opacity: 1,
      pointer-events: auto,
      width: 0,
    ),
    ".appControls .BrowseByBtn.location": (
      opacity: 1,
      pointer-events: auto,
    ),
    ".appControls .BrowseByBtn.inactive": (
      visibility: hidden,
      opacity: 0,
      transition: "opacity #{$fastStart}, transform #{$defaultTransition}, visibility 0s 1s",
    ),
    ".appControls .GuideTransport": (
      left: 190px,
    ),
    ".ViewTwo": (pointer-events: auto),
    ".ViewTwo .wheel .Wheel .interactiveItems .PullToSpin": (pointer-events: auto),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .list": (pointer-events: auto),
    ".ViewTwo .header": (opacity: 1),
    ".ViewTwo .companyBreakdown": (opacity: 1),
    ".ViewTwo .legend": (opacity: 1),
    ".ConditionDetails > *": (pointer-events: auto),
    ".ConditionDetails .ConditionList .List": (opacity: 1),
    ".ConditionDetails .listPane .List-Item": (opacity: 1),
    ".ConditionDetails .listPane .List-Item.selected": (opacity: 1),
    ".ConditionDetails .listPane .List-Item .CircleContainer": (opacity: 1),
    ".ConditionDetails .ProjectHeader": (opacity: 1),
    ".ConditionDetails .contentPane": (opacity: 1),
    ".Footer": (
      opacity: 1,
      visibility: visible,


      transition: "opacity #{$defaultTransition}, height #{$defaultTransition}",
    ),
  ),
  // View 2
  8: (
    ".guideTranslate": (
      visibility: hidden,
      opacity: 0,
      transition: "transform #{$defaultTransition}, opacity #{$fastestEnd}",
    ),
    ".guideTranslate .Guide": (transform: scale(0.2)),
    ".guideTranslate .CircleContainer": (
      pointer-events: none,
      background-color: $GuideFaded,
    ),
    ".appControls .GuideTransport": (
      visibility: hidden,
      opacity: 0,
      transition: "opacity #{$fastStart}, visibility 0s 1s, left #{$defaultTransition}",

    ),
    ".ViewTwo": (
      transition: "opacity #{$defaultTransition}",
    ),
    ".ViewTwo .menus": (
      opacity: 1,
      transition: opacity $fastestEnd,
    ),
    ".ViewTwo .wheel .Wheel .interactiveItems .PullToSpin": (pointer-events: all),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .list": (pointer-events: all),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .List-Item-Content": (pointer-events: auto),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .List": (pointer-events: auto),
    ".ViewThree": (
      transition: "opacity #{$fastestStart}, visibility 0s 1s",
    ),
  ),
  // View 3
  10: (
    ".appControls .arrowWrapper": (width: 128px),
    ".appControls .BrowseByBtn.active": (
      visibility: hidden,
      opacity: 0,
      transition: "opacity #{$fastStart}, transform #{$defaultTransition}, visibility 0s 1s",
    ),
    ".appControls .BrowseByBtn.inactive": (
      visibility: visible,
      opacity: 1,
      transition: "opacity #{$defaultTransition}, transform #{$defaultTransition}",
    ),
    ".ViewTwo": (
      pointer-events: none,
      visibility: hidden,
      transition: "opacity #{$fastestStart}, visibility 0s 1s",
      opacity: 0,
    ),
    ".ViewTwo .wheel .Wheel .interactiveItems .PullToSpin": (pointer-events: none),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .list": (pointer-events: none),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .List-Item-Content": (pointer-events: none),
    ".ViewTwo .wheel .Wheel .interactiveItems .WheelList .List": (pointer-events: none),
    ".ViewThree": (
      pointer-events: auto,
      visibility: visible,
      opacity: 1,
      transition: "opacity #{defaultTransition}",
    ),
    ".ViewThree .VictoryContainer > svg": (pointer-events: all !important),
  ),
);

$combinedState: ();

.transitionWrapper {
  @each $stage, $rules in $states {
    &.transition-state-#{$stage} {
      @each $selector, $properties in $rules {
        @if map_has_key($combinedState, $selector) == false {
          $combinedState: map-merge($combinedState, ($selector: ())) !global;
        }

        $combinedState: map-merge(
          $combinedState,
          ($selector: map-merge(map-get($combinedState, $selector), $properties)),
        ) !global;
      }

      @each $selector, $properties in $combinedState {
        #{$selector} {
          @each $property, $value in map-get($combinedState, $selector) {
            #{$property}: #{$value};
          }
        }
      }
    }
  }
}
